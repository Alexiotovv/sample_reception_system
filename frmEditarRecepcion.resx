<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefresh.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SusHXEpVRQAAAABJRU5ErkJggg==
</value>
  </data>
</root>